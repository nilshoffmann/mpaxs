/*
 * Mpaxs, modular parallel execution system.
 * Copyright (C) 2010-2013, The authors of Mpaxs. All rights reserved.
 *
 * Project website: http://mpaxs.sf.net
 *
 * Mpaxs may be used under the terms of either the
 *
 * GNU Lesser General Public License (LGPL)
 * http://www.gnu.org/licenses/lgpl.html
 *
 * or the
 *
 * Eclipse Public License (EPL)
 * http://www.eclipse.org/org/documents/epl-v10.php
 *
 * As a user/recipient of Mpaxs, you may choose which license to receive the code
 * under. Certain files or entire directories may not be covered by this
 * dual license, but are subject to licenses compatible to both LGPL and EPL.
 * License exceptions are explicitly declared in all relevant files or in a
 * LICENSE file in the relevant directories.
 *
 * Mpaxs is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. Please consult the relevant license documentation
 * for details.
 */
package net.sf.mpaxs.spi.server.gui;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.SwingUtilities;
import net.sf.mpaxs.spi.server.Host;
import net.sf.mpaxs.spi.server.MasterServer;

/**
 *
 * @author Kai Bernd Stadermann
 */
public class ComputeHostInfo extends javax.swing.JFrame {

	private MasterServer master;
	private Host host;
	private ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

	/**
	 *
	 * @param host
	 * @param master
	 */
	public ComputeHostInfo(Host host, MasterServer master) {
		initComponents();
		this.ipAdress.setText(host.getIP());
		this.cores.setText(host.getCores() + "");
		this.freeCores.setText(host.getFreeCores() + "");
		this.hostId.setText(host.getId().toString());
		this.master = master;
		this.host = host;
		permanentFreeCoresUpdates();
		this.setVisible(true);
	}

	private void permanentFreeCoresUpdates() {
		scheduler.scheduleAtFixedRate(
			new Runnable() {
				@Override
				public void run() {
					SwingUtilities.invokeLater(new Runnable() {

						public void run() {
							freeCores.setText(host.getFreeCores() + "");
						}
					});
				}
			}, 0, 1, TimeUnit.SECONDS);
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ipAdress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cores = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        freeCores = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        hostId = new javax.swing.JTextField();
        shutdownHostButton = new javax.swing.JButton();
        infoText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compute Host Information");

        jLabel1.setText("IP adress:");

        ipAdress.setEditable(false);
        ipAdress.setBorder(null);

        jLabel2.setText("Number of cores:");

        cores.setEditable(false);
        cores.setBorder(null);

        jLabel3.setText("Number of currently free cores");

        freeCores.setEditable(false);
        freeCores.setBorder(null);
        freeCores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freeCoresActionPerformed(evt);
            }
        });

        jLabel4.setText("Host ID:");

        hostId.setEditable(false);
        hostId.setBorder(null);

        shutdownHostButton.setText("Shutdown this Compute Host");
        shutdownHostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shutdownHostButtonActionPerformed(evt);
            }
        });

        infoText.setEditable(false);
        infoText.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(hostId, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(freeCores, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(infoText, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(shutdownHostButton, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(ipAdress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(cores, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(freeCores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hostId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(shutdownHostButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void shutdownHostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shutdownHostButtonActionPerformed
		shutdownHostButton.setEnabled(false);
		master.shutdownHost(host.getId());
		infoText.setText("The Compute Host is shutting down!");
    }//GEN-LAST:event_shutdownHostButtonActionPerformed

    private void freeCoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freeCoresActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_freeCoresActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cores;
    private javax.swing.JTextField freeCores;
    private javax.swing.JTextField hostId;
    private javax.swing.JTextField infoText;
    private javax.swing.JTextField ipAdress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton shutdownHostButton;
    // End of variables declaration//GEN-END:variables

}
